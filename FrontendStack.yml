AWSTemplateFormatVersion: "2010-09-09"
Description: Frontend stack for Photo Lab App (S3 + CloudFront + GitHub OIDC + SSM parameters)

Parameters:
  AppName:
    Type: String
    Default: photo-lab
  GitHubRepoOwner:
    Type: String
  GitHubRepoName:
    Type: String

Resources:

  # --- S3 Bucket ---
  FrontendBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AppName}-frontend-${AWS::AccountId}-${AWS::Region}"
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html

  FrontendBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref FrontendBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource: !Sub "${FrontendBucket.Arn}/*"

  # --- CloudFront OAI ---
  CloudFrontOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub "OAI for ${AppName} frontend bucket"

  # --- CloudFront Distribution ---
  FrontendDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        DefaultRootObject: index.html
        Origins:
          - Id: FrontendOrigin
            DomainName: !GetAtt FrontendBucket.RegionalDomainName
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudFrontOAI}"
        DefaultCacheBehavior:
          TargetOriginId: FrontendOrigin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods: [GET, HEAD]
          CachedMethods: [GET, HEAD]
        ViewerCertificate:
          CloudFrontDefaultCertificate: true

  # --- GitHub OIDC Role ---
  GitHubOIDCRoleFrontend:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AppName}-GitHubOIDCRole-Frontend"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Sub "arn:aws:iam::${AWS::AccountId}:oidc-provider/token.actions.githubusercontent.com"
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringLike:
                token.actions.githubusercontent.com:sub: !Sub "repo:${GitHubRepoOwner}/${GitHubRepoName}:ref:refs/heads/main"
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:ListBucket
                Resource:
                  - !Sub "${FrontendBucket.Arn}"
                  - !Sub "${FrontendBucket.Arn}/*"

  # --- SSM Parameters ---
  FrontendBucketParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AppName}/frontend/S3BucketName"
      Type: String
      Value: !Ref FrontendBucket
    DependsOn: FrontendBucket

  FrontendCFParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AppName}/frontend/CloudFrontDistributionId"
      Type: String
      Value: !Ref FrontendDistribution
    DependsOn: FrontendDistribution

  GitHubOIDCRoleArnParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AppName}/frontend/GitHubOIDCRoleArn"
      Type: String
      Value: !GetAtt GitHubOIDCRoleFrontend.Arn
    DependsOn: GitHubOIDCRoleFrontend

Outputs:
  FrontendURL:
    Value: !GetAtt FrontendDistribution.DomainName
    Export:
      Name: !Sub "${AppName}-FrontendURL"

  FrontendBucketName:
    Value: !Ref FrontendBucket
    Export:
      Name: !Sub "${AppName}-FrontendBucketName"

  CloudFrontDistributionId:
    Value: !Ref FrontendDistribution
    Export:
      Name: !Sub "${AppName}-FrontendDistributionId"

  GitHubOIDCRoleArn:
    Value: !GetAtt GitHubOIDCRoleFrontend.Arn
    Export:
      Name: !Sub "${AppName}-FrontendOIDCRoleArn"
