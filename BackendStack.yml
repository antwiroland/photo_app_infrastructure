AWSTemplateFormatVersion: "2010-09-09"
Description: Backend stack for Photo Lab App with SSM integration

Parameters:
  AppName:
    Type: String
    Default: photo-lab

Resources:
  # -----------------------------
  # ECR Repository
  # -----------------------------
  BackendECRRepo:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub "${AppName}-backend"

  # -----------------------------
  # ECS Cluster
  # -----------------------------
  BackendECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub "${AppName}-ecs-cluster"

  # -----------------------------
  # ECS Task Execution Role
  # -----------------------------
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AppName}-ECSExecutionRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  # -----------------------------
  # ECS Task Role
  # -----------------------------
  ECSTaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AppName}-ECSTaskRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole

  # -----------------------------
  # ECS Service
  # -----------------------------
  BackendService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref BackendECSCluster
      LaunchType: FARGATE
      DesiredCount: 1
      ServiceName: !Sub "${AppName}-backend-service"
      TaskDefinition: !Ref BackendTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups: []
          Subnets: [] # <-- replace with imported subnet IDs

  # -----------------------------
  # ECS Task Definition
  # -----------------------------
  BackendTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub "${AppName}-backend-task"
      RequiresCompatibilities: [FARGATE]
      Cpu: "256"
      Memory: "512"
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      TaskRoleArn: !GetAtt ECSTaskRole.Arn
      ContainerDefinitions:
        - Name: backend
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${AppName}-backend:latest"
          Essential: true
          PortMappings:
            - ContainerPort: 8080
              Protocol: tcp

  # -----------------------------
  # OIDC Role for GitHub Actions
  # -----------------------------
  GitHubOIDCRoleBackend:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AppName}-GitHubOIDCRole-Backend"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Sub arn:aws:iam::${AWS::AccountId}:oidc-provider/token.actions.githubusercontent.com
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringLike:
                token.actions.githubusercontent.com:sub: "repo:GitHubUser/PhotoLabRepo:ref:refs/heads/main"
      Policies:
        - PolicyName: BackendDeploymentPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:BatchGetImage
                  - ecr:CompleteLayerUpload
                  - ecr:DescribeImages
                  - ecr:DescribeRepositories
                  - ecr:GetDownloadUrlForLayer
                  - ecr:InitiateLayerUpload
                  - ecr:PutImage
                  - ecr:UploadLayerPart
                Resource: "*"
              - Effect: Allow
                Action:
                  - ecs:RegisterTaskDefinition
                  - ecs:UpdateService
                  - ecs:DescribeServices
                Resource: "*"
              - Effect: Allow
                Action: iam:PassRole
                Resource:
                  - !GetAtt ECSTaskExecutionRole.Arn
                  - !GetAtt ECSTaskRole.Arn

  # -----------------------------
  # Store values in Parameter Store
  # -----------------------------
  ECRRepositoryUriParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AppName}/backend/ECRRepositoryUri"
      Type: String
      Value: !GetAtt BackendECRRepo.RepositoryUri

  ECSClusterNameParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AppName}/backend/ECSClusterName"
      Type: String
      Value: !Ref BackendECSCluster

  ECSServiceNameParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AppName}/backend/ECSServiceName"
      Type: String
      Value: !Ref BackendService

  GitHubOIDCRoleArnParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AppName}/backend/GitHubOIDCRoleArn"
      Type: String
      Value: !GetAtt GitHubOIDCRoleBackend.Arn

Outputs:
  ECRRepositoryUri:
    Value: !GetAtt BackendECRRepo.RepositoryUri
  ECSClusterName:
    Value: !Ref BackendECSCluster
  ECSServiceName:
    Value: !Ref BackendService
  GitHubOIDCRoleBackendArn:
    Value: !GetAtt GitHubOIDCRoleBackend.Arn
