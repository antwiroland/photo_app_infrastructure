AWSTemplateFormatVersion: "2010-09-09"
Description: Backend stack for Photo Lab App (ECR, ECS, IAM roles, SSM parameters)

Parameters:
  AppName:
    Type: String
    Default: photo-lab
  GitHubRepoOwner:
    Type: String
  GitHubRepoName:
    Type: String

Resources:

  # --- ECR Repository ---
  ECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub "${AppName}-backend"

  # --- ECS Cluster ---
  BackendECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub "${AppName}-backend-cluster"

  # --- ECS Task Role ---
  ECSTaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AppName}-ECSTaskRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole

  # --- ECS Task Execution Role ---
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AppName}-ECSTaskExecutionRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  # --- SSM Parameters ---
  ECRRepositoryUriParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AppName}/backend/ECRRepositoryUri"
      Type: String
      Value: !Ref ECRRepository
    DependsOn: ECRRepository

  ECSClusterNameParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AppName}/backend/ECSClusterName"
      Type: String
      Value: !Ref BackendECSCluster
    DependsOn: BackendECSCluster

  ECSServiceNameParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AppName}/backend/ECSServiceName"
      Type: String
      Value: !Sub "${AppName}-backend-service"

  # --- GitHub OIDC Role ---
  GitHubOIDCRoleBackend:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AppName}-GitHubOIDCRole-Backend"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Sub "arn:aws:iam::${AWS::AccountId}:oidc-provider/token.actions.githubusercontent.com"
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringLike:
                token.actions.githubusercontent.com:sub: !Sub "repo:${GitHubRepoOwner}/${GitHubRepoName}:ref:refs/heads/main"
      Policies:
        - PolicyName: SSMAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                Resource:
                  - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AppName}/backend/*"

  GitHubOIDCRoleArnParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AppName}/backend/GitHubOIDCRoleArn"
      Type: String
      Value: !GetAtt GitHubOIDCRoleBackend.Arn
    DependsOn: GitHubOIDCRoleBackend

Outputs:
  ECRRepositoryUri:
    Value: !Ref ECRRepository
    Export:
      Name: !Sub "${AppName}-BackendECRUri"

  ECSClusterName:
    Value: !Ref BackendECSCluster
    Export:
      Name: !Sub "${AppName}-BackendECSClusterName"

  GitHubOIDCRoleArn:
    Value: !GetAtt GitHubOIDCRoleBackend.Arn
    Export:
      Name: !Sub "${AppName}-BackendOIDCRoleArn"
